import graphviz as gv
from fdgraph import (
    c_col,
    q_col,
    n_col,
    init_attrs,
    fin_attrs,
    decision_attrs,
    choice_attrs,
    fn_attrs,
)

G = gv.Digraph("example")

G.node("init", label="f", **init_attrs)
G.node("H_q0", label="H", shape="rect")
G.node("H_q1", label="H", shape="rect")
G.edge("init", "H_q0", color=q_col)
G.edge("init", "H_q1", color=q_col)
G.node("q_alloc", label="", shape="circle")
G.node("CCX", shape="rect")
G.edge("H_q0", "CCX", color=q_col)
G.edge("H_q1", "CCX", color=q_col)
G.edge("q_alloc", "CCX", color=q_col)
G.node("H_q", label="H", shape="rect")
G.node("CCZ", shape="rect")
G.edge("CCX", "CCZ", color=q_col)
G.edge("CCX", "CCZ", color=q_col)
G.edge("CCX", "H_q", color=q_col)
G.edge("H_q", "CCZ", color=q_col)
G.node("M_q0", label="M", shape="rect")
G.node("M_q1", label="M", shape="rect")
G.node("q_free", label="", shape="circle")
G.edge("CCZ", "M_q0", color=q_col)
G.edge("CCZ", "M_q1", color=q_col)
G.edge("CCZ", "q_free", color=q_col)
G.node("copy", label="copy", shape="rect")
G.edge("M_q0", "copy", color=c_col)
G.node("xor", label="⊕", shape="rect")
G.edge("copy", "xor", color=c_col)
G.edge("M_q1", "xor", color=c_col)
G.node("decision", label="?c=0", **decision_attrs)
G.edge("copy", "decision", label="c0", color=c_col)
G.edge("xor", "decision", label="c", color=c_col)
G.edge("M_q0", "decision", color=q_col)
G.edge("M_q1", "decision", color=q_col)
G.node("c=0", **choice_attrs)
G.edge("decision", "c=0", label="c0", color=c_col)
G.edge("decision", "c=0", color=q_col)
G.edge("decision", "c=0", color=q_col)
G.node("c=1", **choice_attrs)
G.edge("decision", "c=1", color=q_col)
G.edge("decision", "c=1", color=q_col)
G.node("T", label="T", shape="rect")
G.edge("c=1", "T", color=q_col)
G.node("f", label="(f)", **fn_attrs)
G.edge("c=1", "f", color=q_col)
G.edge("T", "f", color=q_col)
G.node("join", label="", shape="point")
G.edge("c=0", "join", color=c_col)
G.edge("c=0", "join", color=q_col)
G.edge("c=0", "join", color=q_col)
G.edge("f", "join", color=c_col)
G.edge("f", "join", color=q_col)
G.edge("f", "join", color=q_col)
G.node("fin", **fin_attrs)
G.edge("join", "fin", color=c_col)
G.edge("join", "fin", color=q_col)
G.edge("join", "fin", color=q_col)

G.node("winit", label="w", **init_attrs)
G.node("wdecide", label="?c=0", **decision_attrs)
G.edge("winit", "wdecide", label="c", color=c_col)
G.node("wc=0", **choice_attrs)
G.node("wc=1", **choice_attrs)
G.edge("wdecide", "wc=0", color=n_col)
G.edge("wdecide", "wc=1", color=n_col)
G.node("write0", label="'0\\\\n'", shape="cds")
G.node("write1", label="'1\\\\n'", shape="cds")
G.edge("wc=0", "write0", color=n_col)
G.edge("wc=1", "write1", color=n_col)
G.node("wjoin", label="", shape="point")
G.edge("write0", "wjoin", color=n_col)
G.edge("write1", "wjoin", color=n_col)
G.node("wfin", **fin_attrs)
G.edge("wjoin", "wfin", color=n_col)

G.node("minit", label="main", **init_attrs)
G.node("mdecide0", label="?n=0", **decision_attrs)
G.edge("minit", "mdecide0", label="n", color=c_col)
G.node("mn=0", **choice_attrs)
G.node("mn!=0", **choice_attrs)
G.edge("mdecide0", "mn=0", color=n_col)
G.edge("mdecide0", "mn!=0", color=c_col)
G.node("merror", label="'Error\\\\n'", shape="cds")
G.edge("mn=0", "merror", color=n_col)
G.node("mlastjoin", label="", shape="point")
G.edge("merror", "mlastjoin", color=n_col)
G.node("mfin", **fin_attrs)
G.edge("mlastjoin", "mfin", color=n_col)
G.node("mq0_alloc", label="", shape="circle")
G.node("mq1_alloc", label="", shape="circle")
G.node("mwhiletop", label="", shape="point")
G.edge("mn!=0", "mwhiletop", color=c_col)
G.edge("mq0_alloc", "mwhiletop", color=q_col)
G.edge("mq1_alloc", "mwhiletop", color=q_col)
G.node("mdecide1", label="?n=1", **decision_attrs)
G.edge("mwhiletop", "mdecide1", label="n", color=c_col)
G.edge("mwhiletop", "mdecide1", color=q_col)
G.edge("mwhiletop", "mdecide1", color=q_col)
G.node("mn=1", **choice_attrs)
G.node("mn!=1", **choice_attrs)
G.edge("mdecide1", "mn=1", color=n_col)
G.edge("mdecide1", "mn!=1", color=c_col)
G.edge("mdecide1", "mn!=1", color=q_col)
G.edge("mdecide1", "mn!=1", color=q_col)
G.node("mdone", label="'Done\\\\n'", shape="cds")
G.edge("mn=1", "mdone", color=n_col)
G.edge("mdone", "mlastjoin", color=n_col)
G.node("mCZ", label="CZ", shape="rect")
G.edge("mn!=1", "mCZ", color=q_col)
G.edge("mn!=1", "mCZ", color=q_col)
G.node("mdecideeven", label="?n even", **decision_attrs)
G.edge("mn!=1", "mdecideeven", label="n", color=c_col)
G.edge("mCZ", "mdecideeven", color=q_col)
G.edge("mCZ", "mdecideeven", color=q_col)
G.node("mneven", **choice_attrs)
G.node("mnodd", **choice_attrs)
G.edge("mdecideeven", "mneven", color=c_col)
G.edge("mdecideeven", "mneven", color=q_col)
G.edge("mdecideeven", "mneven", color=q_col)
G.edge("mdecideeven", "mnodd", color=c_col)
G.edge("mdecideeven", "mnodd", color=q_col)
G.edge("mdecideeven", "mnodd", color=q_col)
G.node("mhalve", label="n → n/2", shape="rect")
G.edge("mneven", "mhalve", label="n", color=c_col)
G.node("mf", label="(f)", **fn_attrs)
G.edge("mneven", "mf", color=q_col)
G.edge("mneven", "mf", color=q_col)
G.node("mwbeven", label="(w)", **fn_attrs)
G.edge("mf", "mwbeven", color=c_col)
G.edge("mhalve", "mwhiletop", color=c_col)
G.edge("mf", "mwhiletop", color=q_col)
G.edge("mf", "mwhiletop", color=q_col)
G.node("mdecidebig", label="?n ≥ 1431655765", **decision_attrs)
G.edge("mnodd", "mdecidebig", label="n", color=c_col)
G.edge("mnodd", "mdecidebig", color=q_col)
G.edge("mnodd", "mdecidebig", color=q_col)
G.node("mnbig", **choice_attrs)
G.node("mnsmall", **choice_attrs)
G.edge("mdecidebig", "mnbig", color=n_col)
G.edge("mdecidebig", "mnsmall", color=c_col)
G.edge("mdecidebig", "mnsmall", color=q_col)
G.edge("mdecidebig", "mnsmall", color=q_col)
G.node("moverflow", label="'Overflow\\\\n'", shape="cds")
G.edge("mnbig", "moverflow", color=n_col)
G.edge("moverflow", "mlastjoin", color=n_col)
G.node("m3n", label="n → (3n+1)/2", shape="rect")
G.edge("mnsmall", "m3n", label="n", color=c_col)
G.node("mf2", label="(f)", **fn_attrs)
G.edge("mnsmall", "mf2", color=q_col)
G.edge("mnsmall", "mf2", color=q_col)
G.node("mwbodd", label="(w)", **fn_attrs)
G.edge("mf2", "mwbodd", color=c_col)
G.edge("m3n", "mwhiletop", color=c_col)
G.edge("mf2", "mwhiletop", color=q_col)
G.edge("mf2", "mwhiletop", color=q_col)

G.render(format="svg")
